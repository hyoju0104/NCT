<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.UserRepository">

    <sql id="SELECT_BASE">
        SELECT id,
               auth_id        AS authId,
               plan_id        AS planId,
               username,
               password,
               name,
               phone_num      AS phoneNum,
               email,
               address,
               point,
               provider,
               provider_id    AS providerId,
               signed_at      AS signedAt,
               paid_at        AS paidAt,
               status_plan    AS statusPlan,
               status_account AS statusAccount,
               rental_cnt     AS rentalCnt
        FROM user
        WHERE 1 = 1
    </sql>


    <select id="findByUsername" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND username = #{username}
    </select>

    <select id="findById" resultType="com.lec.spring.domain.User">
        <include refid="SELECT_BASE"/>
        AND id = #{id}
    </select>

    <insert id="save" parameterType="com.lec.spring.domain.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (auth_id, username, password, name, email, phone_num, address, point, status_plan,
                          status_account, rental_cnt)
        VALUES (1, #{username}, #{password}, #{name}, #{email}, #{phoneNum}, #{address}, #{point}, #{statusPlan},
                #{statusAccount}, #{rentalCnt})
    </insert>

    <update id="updateUserInfo" parameterType="com.lec.spring.domain.User">
        UPDATE user
        SET name = #{name},
            phone_num = #{phoneNum},
            password = #{password}
        WHERE id = #{id}
    </update>

    <update id="updateUserPlanId">
        UPDATE user
        SET plan_id = #{planId}
        WHERE id = #{id}
    </update>

    <update id="updatePaidAt" parameterType="long">
        UPDATE user
        SET paid_at = NOW()
        WHERE id = #{id}
    </update>

    <update id="refundPoint">
        UPDATE user
        SET point = point - #{amount}
        WHERE id = #{id}
          AND point >= #{amount}
    </update>

    <update id="addPoint">
        UPDATE user SET point = point + #{amount} WHERE id = #{id}
    </update>
    <update id="increaseRentalCount" parameterType="long">
        UPDATE User
        SET rental_cnt = rental_cnt + 1
        WHERE id = #{userId}
    </update>

    <update id="updateStatusToDeleted" parameterType="long">
        UPDATE User
        SET status_account = 'DELETED'
        WHERE id = #{userId}
    </update>


    <!-- 회원 상태(status_account) 복구 -->
    <update id="updateStatusAccount">
        UPDATE user
        SET status_account = #{status}
        WHERE id = #{userId}
    </update>

    <select id="findStatusAccountById" resultType="string">
        SELECT status_account FROM user WHERE id = #{id}
    </select>

    <update id="updateStatusPlan">
        UPDATE user
        SET plan_id = #{planId},
            status_plan = 'ACTIVE'
        WHERE id = #{id}
    </update>

</mapper>
